// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using DataAccess.Data;


#nullable disable

namespace MyMusicCollection.Migrations
{
    [DbContext(typeof(MusicCollectionBDcontext))]
    [Migration("20250415000510_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlbumGenre", b =>
                {
                    b.Property<int>("AlbumsAlbumId")
                        .HasColumnType("int");

                    b.Property<int>("GenresGenreId")
                        .HasColumnType("int");

                    b.HasKey("AlbumsAlbumId", "GenresGenreId");

                    b.HasIndex("GenresGenreId");

                    b.ToTable("AlbumGenre");
                });

            modelBuilder.Entity("ArtistGenre", b =>
                {
                    b.Property<int>("ArtistsArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenresGenreId")
                        .HasColumnType("int");

                    b.HasKey("ArtistsArtistId", "GenresGenreId");

                    b.HasIndex("GenresGenreId");

                    b.ToTable("ArtistGenre");

                    b.HasData(
                        new
                        {
                            ArtistsArtistId = 1,
                            GenresGenreId = 1
                        },
                        new
                        {
                            ArtistsArtistId = 1,
                            GenresGenreId = 2
                        },
                        new
                        {
                            ArtistsArtistId = 2,
                            GenresGenreId = 3
                        },
                        new
                        {
                            ArtistsArtistId = 2,
                            GenresGenreId = 4
                        },
                        new
                        {
                            ArtistsArtistId = 3,
                            GenresGenreId = 4
                        },
                        new
                        {
                            ArtistsArtistId = 3,
                            GenresGenreId = 5
                        });
                });

            modelBuilder.Entity("GenreTrack", b =>
                {
                    b.Property<int>("GenresGenreId")
                        .HasColumnType("int");

                    b.Property<int>("TracksTrackId")
                        .HasColumnType("int");

                    b.HasKey("GenresGenreId", "TracksTrackId");

                    b.HasIndex("TracksTrackId");

                    b.ToTable("GenreTrack");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<int>("AlbumDuration")
                        .HasColumnType("int");

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrackCount")
                        .HasColumnType("int");

                    b.HasKey("AlbumId");

                    b.HasIndex("ReleaseDate");

                    b.HasIndex("ArtistId", "AlbumName")
                        .IsUnique();

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            AlbumDuration = 934,
                            AlbumName = "Three Days Grace",
                            ArtistId = 1,
                            Format = "CD",
                            Label = "Jive Records",
                            ReleaseDate = new DateTime(2003, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackCount = 4
                        },
                        new
                        {
                            AlbumId = 2,
                            AlbumDuration = 855,
                            AlbumName = "One-X",
                            ArtistId = 1,
                            Format = "CD",
                            Label = "Jive Records",
                            ReleaseDate = new DateTime(2006, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackCount = 4
                        },
                        new
                        {
                            AlbumId = 3,
                            AlbumDuration = 1710,
                            AlbumName = "Master of Puppets",
                            ArtistId = 2,
                            Format = "Vinyl",
                            Label = "Elektra Records",
                            ReleaseDate = new DateTime(1986, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackCount = 4
                        },
                        new
                        {
                            AlbumId = 4,
                            AlbumDuration = 1429,
                            AlbumName = "Metallica",
                            ArtistId = 2,
                            Format = "CD",
                            Label = "Elektra Records",
                            ReleaseDate = new DateTime(1991, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackCount = 4
                        },
                        new
                        {
                            AlbumId = 5,
                            AlbumDuration = 1029,
                            AlbumName = "Ten Thousand Fists",
                            ArtistId = 3,
                            Format = "CD",
                            Label = "Reprise Records",
                            ReleaseDate = new DateTime(2005, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackCount = 4
                        },
                        new
                        {
                            AlbumId = 6,
                            AlbumDuration = 988,
                            AlbumName = "Immortalized",
                            ArtistId = 3,
                            Format = "Digital",
                            Label = "Reprise Records",
                            ReleaseDate = new DateTime(2015, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrackCount = 4
                        });
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("bandName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("yearsOfActivity")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Biography = "Canadian rock band formed in Norwood, Ontario.",
                            Country = "Canada",
                            bandName = "Three Days Grace",
                            yearsOfActivity = "1997-present"
                        },
                        new
                        {
                            ArtistId = 2,
                            Biography = "American heavy metal band, one of the 'Big Four' of thrash metal.",
                            Country = "USA",
                            bandName = "Metallica",
                            yearsOfActivity = "1981-present"
                        },
                        new
                        {
                            ArtistId = 3,
                            Biography = "American heavy metal band from Chicago.",
                            Country = "USA",
                            bandName = "Disturbed",
                            yearsOfActivity = "1994-present"
                        });
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.HasIndex("GenreName")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Post-Grunge"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Alternative Metal"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Thrash Metal"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Heavy Metal"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Nu Metal"
                        });
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.PlayList", b =>
                {
                    b.Property<int>("PlayListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayListId"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlayListName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PlayListId");

                    b.HasIndex("DateCreated");

                    b.HasIndex("UserId", "PlayListName")
                        .IsUnique();

                    b.ToTable("PlayLists");

                    b.HasData(
                        new
                        {
                            PlayListId = 1,
                            DateCreated = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayListName = "Metal Favorites",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.RatingAndReview", b =>
                {
                    b.Property<int>("RatingAndReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingAndReviewId"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasAnnotation("CheckConstraint", "Rating >= 1 AND Rating <= 5");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RatingAndReviewId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("UserId");

                    b.ToTable("RatingsAndReviews");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrackId"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("LyricsAuthor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MusicAuthor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NumberInList")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TrackId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            TrackId = 1,
                            AlbumId = 1,
                            Duration = 258,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 1,
                            TrackName = "Burn"
                        },
                        new
                        {
                            TrackId = 2,
                            AlbumId = 1,
                            Duration = 192,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 2,
                            TrackName = "Just Like You"
                        },
                        new
                        {
                            TrackId = 3,
                            AlbumId = 1,
                            Duration = 229,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 3,
                            TrackName = "I Hate Everything About You"
                        },
                        new
                        {
                            TrackId = 4,
                            AlbumId = 1,
                            Duration = 255,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 4,
                            TrackName = "Home"
                        },
                        new
                        {
                            TrackId = 5,
                            AlbumId = 2,
                            Duration = 231,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 1,
                            TrackName = "Animal I Have Become"
                        },
                        new
                        {
                            TrackId = 6,
                            AlbumId = 2,
                            Duration = 209,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 2,
                            TrackName = "Pain"
                        },
                        new
                        {
                            TrackId = 7,
                            AlbumId = 2,
                            Duration = 208,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 3,
                            TrackName = "Never Too Late"
                        },
                        new
                        {
                            TrackId = 8,
                            AlbumId = 2,
                            Duration = 207,
                            LyricsAuthor = "Adam Gontier",
                            MusicAuthor = "Three Days Grace",
                            NumberInList = 4,
                            TrackName = "Riot"
                        },
                        new
                        {
                            TrackId = 9,
                            AlbumId = 3,
                            Duration = 312,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 1,
                            TrackName = "Battery"
                        },
                        new
                        {
                            TrackId = 10,
                            AlbumId = 3,
                            Duration = 515,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 2,
                            TrackName = "Master of Puppets"
                        },
                        new
                        {
                            TrackId = 11,
                            AlbumId = 3,
                            Duration = 387,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 3,
                            TrackName = "Welcome Home (Sanitarium)"
                        },
                        new
                        {
                            TrackId = 12,
                            AlbumId = 3,
                            Duration = 496,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 4,
                            TrackName = "Disposable Heroes"
                        },
                        new
                        {
                            TrackId = 13,
                            AlbumId = 4,
                            Duration = 331,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 1,
                            TrackName = "Enter Sandman"
                        },
                        new
                        {
                            TrackId = 14,
                            AlbumId = 4,
                            Duration = 324,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 2,
                            TrackName = "Sad But True"
                        },
                        new
                        {
                            TrackId = 15,
                            AlbumId = 4,
                            Duration = 386,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 3,
                            TrackName = "The Unforgiven"
                        },
                        new
                        {
                            TrackId = 16,
                            AlbumId = 4,
                            Duration = 388,
                            LyricsAuthor = "James Hetfield",
                            MusicAuthor = "Metallica",
                            NumberInList = 4,
                            TrackName = "Nothing Else Matters"
                        },
                        new
                        {
                            TrackId = 17,
                            AlbumId = 5,
                            Duration = 214,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 1,
                            TrackName = "Ten Thousand Fists"
                        },
                        new
                        {
                            TrackId = 18,
                            AlbumId = 5,
                            Duration = 245,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 2,
                            TrackName = "Stricken"
                        },
                        new
                        {
                            TrackId = 19,
                            AlbumId = 5,
                            Duration = 283,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 3,
                            TrackName = "I'm Alive"
                        },
                        new
                        {
                            TrackId = 20,
                            AlbumId = 5,
                            Duration = 287,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 4,
                            TrackName = "Land of Confusion"
                        },
                        new
                        {
                            TrackId = 21,
                            AlbumId = 6,
                            Duration = 253,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 1,
                            TrackName = "The Vengeful One"
                        },
                        new
                        {
                            TrackId = 22,
                            AlbumId = 6,
                            Duration = 263,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 2,
                            TrackName = "Immortalized"
                        },
                        new
                        {
                            TrackId = 23,
                            AlbumId = 6,
                            Duration = 245,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 3,
                            TrackName = "The Sound of Silence"
                        },
                        new
                        {
                            TrackId = 24,
                            AlbumId = 6,
                            Duration = 227,
                            LyricsAuthor = "David Draiman",
                            MusicAuthor = "Disturbed",
                            NumberInList = 4,
                            TrackName = "Fire It Up"
                        });
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "musicfan@example.com",
                            Password = "SecurePass123",
                            UserName = "MusicFan"
                        });
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.UserCollection", b =>
                {
                    b.Property<int>("UserCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserCollectionId"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("wanted");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserCollectionId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("DateAdded");

                    b.HasIndex("UserId");

                    b.ToTable("UserCollections");
                });

            modelBuilder.Entity("PlaylistTrack", b =>
                {
                    b.Property<int>("PlayListId")
                        .HasColumnType("int");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("PlayListId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("PlaylistTrack");

                    b.HasData(
                        new
                        {
                            PlayListId = 1,
                            TrackId = 5
                        },
                        new
                        {
                            PlayListId = 1,
                            TrackId = 13
                        },
                        new
                        {
                            PlayListId = 1,
                            TrackId = 23
                        });
                });

            modelBuilder.Entity("AlbumGenre", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Album", null)
                        .WithMany()
                        .HasForeignKey("AlbumsAlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMusicCollection.Entitys.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArtistGenre", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Artist", null)
                        .WithMany()
                        .HasForeignKey("ArtistsArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMusicCollection.Entitys.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreTrack", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMusicCollection.Entitys.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksTrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Album", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.PlayList", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.User", "User")
                        .WithMany("PlayLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.RatingAndReview", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Album", "Album")
                        .WithMany("RatingsAndReviews")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMusicCollection.Entitys.User", "User")
                        .WithMany("RatingsAndReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Track", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.UserCollection", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.Album", "Album")
                        .WithMany("UserCollections")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMusicCollection.Entitys.User", "User")
                        .WithMany("UserCollections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PlaylistTrack", b =>
                {
                    b.HasOne("MyMusicCollection.Entitys.PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMusicCollection.Entitys.Track", null)
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Album", b =>
                {
                    b.Navigation("RatingsAndReviews");

                    b.Navigation("Tracks");

                    b.Navigation("UserCollections");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("MyMusicCollection.Entitys.User", b =>
                {
                    b.Navigation("PlayLists");

                    b.Navigation("RatingsAndReviews");

                    b.Navigation("UserCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
